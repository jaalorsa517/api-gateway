name: Deploy function Api gateway
on:
  workflow_dispatch:
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: api_gateway
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: cd functions && npm ci

      - name: Enviroment Variables
        run: |
          cd functions
          rm -f .env
          touch .env
          echo 'PORT_SERVER=${{vars.PORT_SERVER}}' >> .env
          echo 'CORS_ORIGIN=${{vars.CORS_ORIGIN}}' >> .env
          echo 'YOUTUBE_API_HOST=${{vars.YOUTUBE_API_HOST}}' >> .env
          echo 'YOUTUBE_API_PATH=${{vars.YOUTUBE_API_PATH}}' >> .env
          echo 'YOUTUBE_APIKEY=${{secrets.YOUTUBE_APIKEY}}' >> .env
          echo 'YOUTUBE_LIST=${{vars.YOUTUBE_LIST}}' >> .env

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEBPAGE_7E920 }}
          PROJECT_ID: ${{ vars.PROJECT_ID}}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Get version from package.json
        id: get_version
        run: echo "version=$(node -p -e "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          